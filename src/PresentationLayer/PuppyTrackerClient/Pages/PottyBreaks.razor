@page "/pottyBreaks"
@using PuppyApi.Domain.Entities
@using PuppyTrackerClient.Data

<h1>PottyBreaks</h1>

<p>When is your dog doing his stuff?</p>
<SinglePottyBreak SaveNewPottyBreak="AddNewPottyPottyBreak" />
<br />
@if (_pottyBreaks == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>                
                <th>When</th>
                <th>Peed</th>
                <th>Pooed</th>
                <th>Comment</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var pottyBreak in _pottyBreaks)
            {
                <tr>                    
                    <td>@pottyBreak.DateTime.ToString("dddd, dd MMM HH:mm")</td>
                    <td>@pottyBreak.Peed</td>
                    <td>@pottyBreak.Pooed</td>
                    <td>@pottyBreak.Comment</td>
                </tr>
            }
        </tbody>
    </table>
}

@code 
{    
    private PottyBreak[] _pottyBreaks;

    private PottyBreakApiClient apiClient { get; set; }

    protected override async Task OnInitializedAsync()
    {
        apiClient = new PottyBreakApiClient();
        _pottyBreaks = await apiClient.GetPottyBreaksAsync();
    }

    private async void AddNewPottyPottyBreak(PottyBreak newPottyBreak)
    {
        await apiClient.SaveOrUpdatePottyBreak(newPottyBreak);        
    }
}
